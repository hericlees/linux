******************************************************************************************************************************************************************************
# Dicas úteis para o aprendizado.

1. Digite qualquer comando seguido de “–help” (Dois traços e a palavra help) para ver a uma descrição 
detalhada do comando. 
(EX: “wget –help”)

2. Outra forma de conseguir documentação oficial dos comandos Linux é o comando man (manual), 
Digite man seguido do nome do comando que você precisa de informação.
(EX: man wget)

Como eu saio daqui? Com ‘q’ eu saio aqui.


#Atalhos globais.

Ctrl+C cancela o comando atual em funcionamento
Ctrl+Z para o comando atual, retorna com fg em primeiro plano Linux ou bg em segundo plano
Ctrl+D faz logout da sessão atual; similar ao comando exit
Ctrl+W apaga uma palavra na linha atual
Ctrl+U apaga a linha inteira
Ctrl+R tecle para mostrar um comando recente
Ctrl+L limpa a tela do terminal; similar ao comando clear
******************************************************************************************************************************************************************************

#Lista de comandos:


1. Arquivos e diretórios

# O ‘pwd’ vai mostrar aonde estamos

pwd

# O "touch" cria um arquivo

touch

# O ".touch" cria um arquivo oculto

.touch

# Exibe o conteúdo de um arquivo ou diretório

cat

# Faz a paginação do arquivo (via enter)

more Ex: more services

# Faz a paginação do arquivo (via setas)

less Ex: less services

# Mostra o final do arquivo (default: ultimas 10 linhas)

tail Ex: tail /etc/passwd

# Mostra o inicio do arquivo (default: primeiras 10 linhas)

head EX: head /etc/passwd

# Filtrar a quantidade de linhas que você quer

tail -n ou head -n e o path

# O ls é usado para listar arquivos ou diretórios dentro de outros diretórios

ls

# Lista de diretórios com exibição de arquivos ocultos

ls -a

# O ‘l’ usamos para esse long list aqui, ele dá um detalhamento

ls -al

# Lista de diretórios ocultos e não ocultos

ls -lrt

# Muda para o diretório /home (arquivos pessoais)

cd

# Muda do diretório atual para o especificado (substituir a variável dir pelo nome da pasta)

cd /dir

# Volta um nível

cd ..

# Volta 2 níveis

cd ../..

# Volta 3 níveis (só acrescentar a ../ para voltar mais niveis)

cd ../../.. 

# Volta () para o diretório anterior

cd –

# Cria um diretório especificado (substituir a variável dir pelo nome da pasta)

mkdir dir

# Cria uma árvore de diretório

mkdir -p /dir1/dir2/dir3

# Força o uso do espaço nos nomes

mkdir diretorio\ 1

# Exclui a pasta chamada ‘dir1'

rmdir dir1

# Exclui o arquivo chamado ‘dir1’

rm -r dir1

# Exclui uma pasta chamada ‘dir1’ com seu conteúdo forçadamente. (Se excluí todo o seu conteúdo)

rm -rf dir1

# Copia o “diretório1” para o “diretório2”; cria o “diretório2” caso não exista (substituir a variável dir pelo 
nome do diretório)

cp -r dir1 dir2

# Copia para o diretório corrente (atual) 

cp /etc/services .

# A partir do dir1 todo o conteúdo, daqui em diante será despejado para o meu ‘dir2’

cp -r dir1/* dir2

# Dupla função: Pode ser usado para renomear ou mover o “dir1” para “dir2”. Se o dir2 for 
um diretório existente, move “dir1” para dentro do diretório “dir2” (substituir a variável dir
pelo nome do diretório)

mv dir1 dir2

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Globbing é uma operação que combina caracteres coringas com partes de nomes de arquivos para a formação de todas as combinações possíveis desses nomes de arquivos.

São caracteres coringas o asterisco (*) e a interrogação (?) (não entre colchetes), sendo chamados de Wildcards, e tem o seguinte comportamento:

Interrogação (?) - Substitui um único caractere dentro de uma cadeia de caracteres.
Asterisco (*) - Significa qualquer cadeia de caracteres, inclusive vazia.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Listar todos os arquivos que começam com ‘arq’

ls arq *

# Listar todos os arquivos que começam com ‘arq1’ e mais alguma coisa depois 1

ls arq1?

# Listar todos os arquivos que tenham 3 caracteres que vão de 1 a 5.

ls ???[1-5]

# Listar todos os arquivos que tenham numeros  de 1 a 5

ls *[1-5]

# Listar todos os arquivos que começam com ‘arq’ de 1 a 5

ls arq [1,5]

# Listar todos os arquivos que começam com ‘arq’ ou 'Arq' que vão de 1 a 5

ls [A,a]arq[1-5]

# Filtrar dados no arquivo (grep)

grep http services

#  Ignorar o case da letra, se é maiúscula ou minúscula

grep -i http services

# Procurar em todo o seu conteúdo

grep -l ricardo *

# Retorna os diretórios ou arquivos que não cotem o item quee buscamos

grep -L ricardo *

# Usa a recursividade para mostrar o arquivo que há dentro do diretório

grep -r HTTP services

# Mostra todos os arquivos que possuem o item (HTTP) buscado

grep -r HTTP *

# Mostra a palavra buscada no arquivo

grep 'palavra' file.txt

# Mostra a palavra buscada no arquivo através do pipe |

cat file.txt | grep 'palavra'

# Procura no sistema o que se busca

find / -name *.conf --> / = raiz/root 

# Busca com autorização de root

sudo find / -name *.conf

# Filtra todos os sub-diretórios do diretório principal

sudo find /etc -maxdepth 2 -name *.conf

# Em um diretório faz a procura a partir do ponto, ou seja, daqui em diante. O que é esse -amin? Especifica o tempo, minutos

find . -amin -5

# Em um diretório faz a procura a partir do ponto, ou seja, daqui em diante. O que é esse -amin? Especifica o tempo, dias

find . -atime -2

# Localiza arquivos por tamanho

sudo find / -size +100M

#  Ignorar o case da letra

sudo find / -iname *.conf

# Joga o output para um arquivo e não para a tela

grep ssh services > listagem.txt

# Para não sobrescrever um arquivo existente

grep ssh services >> listagem.txt

----------------------------------------------------------------------------------------------------------------

O pipe vai servir para redirecionar, ele pega a saída de um comando e a redirecionada para um segundo comando

-----------------------------------------------------------------------------------------------------------------
# Ele busca o nome Ricardo no arquivo passwd

cat /etc/passwd | grep ricardo

# Joga o output para um arquivo e não para a tela

cat /etc/passwd | grep ricardo > listagem_usuarios

# Ordena o arquivo e coloca-o em ordem alfabética

cat listagem.txt | sort

# Joga o output para um arquivo e não para a tela

cat listagem.txt | sort > listagem2.txt

# Joga o output para um arquivo e não para a tela

tail -n 5 syslog | grep systemd > ~/labs/redirecionamento/log5.txt
